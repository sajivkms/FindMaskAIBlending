{"version":3,"sources":["components/HelpDialog.js","components/Header.js","components/ImageUpload.js","contexts/mlContext.js","contexts/classContextMgm.js","utils/img2base64.js","components/UploadImageStep1.js","contexts/selectContextMgmt.js","components/Step2Comp.js","utils/findMask.js","components/Step3Comp.js","components/Step4Comp.js","components/Step5Comp.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Transition","React","forwardRef","props","ref","Grow","direction","AlertDialogGrow","useState","open","setOpen","handleClose","Button","variant","color","onClick","Dialog","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","Divider","DialogActions","Header","AppBar","position","Toolbar","style","flex","justifyContent","Typography","baseStyle","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","outline","transition","activeStyle","acceptStyle","rejectStyle","thumbsContainer","flexWrap","marginTop","thumb","border","marginBottom","marginRight","height","boxSizing","thumbInner","minWidth","overflow","img","width","StyledDropzone","files","setFiles","onDrop","useCallback","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","useDropzone","accept","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","thumbs","key","name","src","useEffect","forEach","revokeObjectURL","useMemo","className","MasksContext","createContext","masks","setMasks","MasksContextProvider","initState","classes","boundingBoxes","console","log","setState","state","Provider","value","children","DataContext","data","setdata","DataContextProvider","bottomCenter","dataURLtoFile","dataurl","filename","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","File","type","divStyles","paddingLeft","paddingRight","Upload","setFile","loading","setLoading","showImg","setShowImg","startedLoading","setStartedLoading","dataContext","useContext","masksContext","LinearProgress","FormControlLabel","control","Switch","checked","onChange","prev","label","in","alt","onDropFunction","formData","FormData","reader","FileReader","readAsDataURL","onloadend","localStorage","setItem","result","append","fetch","method","body","then","response","blob","base64data","json","SelectedContext","SelectedContextProvider","mask","boundingBox","predClass","Step2Comp","coord","setCoord","canClick","setClick","submitted","setSubmitted","imgString","getItem","selectedContext","canvasRef","createRef","imageRef","current","getContext","drawImage","e","canvas","event","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","context","beginPath","arc","Math","PI","fillStyle","fill","lineWidth","strokeStyle","stroke","getMousePosition","cursor","Tooltip","title","clearRect","JSON","stringify","maskIdx","location","i","findMask","disabled","base64","hello","Step4Comp","onload","widthOrig","res","onSubmit","Step5Comp","imString","useStyles","makeStyles","theme","root","button","spacing","instructions","HorizontalLinearStepper","activeStep","setActiveStep","Set","skipped","setSkipped","stepDisabled","steps","isStepOptional","step","isStepSkipped","has","Stepper","index","stepProps","labelProps","optional","completed","Step","StepLabel","getStepContent","prevActiveStep","Error","prevSkipped","newSkipped","values","add","delete","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c704212b.chunk.js","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grow from '@material-ui/core/Grow';\nimport Divider from \"@material-ui/core/Divider\"\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Grow direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function AlertDialogGrow() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"contained\" color=\"default\" onClick={handleClickOpen}>\n        How to use\n      </Button>\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-Grow-title\"\n        aria-describedby=\"alert-dialog-Grow-description\"\n      >\n        <DialogTitle id=\"alert-dialog-Grow-title\">{\"Poisson Blending with Artificial Intelligence\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-Grow-description\">\n            This website uses AI to identify objects in an image and blend it into another image using Poisson Blending.\n            <br /><br />\n            <Divider />\n            <br />\n            Follow along with the steps. For steps that have a submit button, make sure that you press the submit button, otherwise it will not work.\n            <br></br><br />\n            <Divider />\n            <br></br>\n            <bold>IMPORTANT NOTE: </bold>This site will not work on mobile devices properly.\n            <br></br><br />\n            <Divider />\n            <br></br>\n            &copy; 2020 Sajiv Kamalakaran\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Thank you!\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from \"./HelpDialog\"\nexport default function Header() {\n  return (\n    <AppBar position=\"static\">\n    <Toolbar style={{\n      flex:\"true\",\n      justifyContent:\"space-between\"\n    }}>\n      <Typography variant=\"h6\">\n        AI Poisson Blending\n      </Typography>\n      <Dialog />\n    </Toolbar>\n  </AppBar>\n  );\n}","import React, { useCallback, useMemo, useState, useEffect } from 'react';\nimport { useDropzone } from 'react-dropzone';\n\nconst baseStyle = {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '20px',\n    borderWidth: 2,\n    borderRadius: 2,\n    borderColor: '#eeeeee',\n    borderStyle: 'dashed',\n    backgroundColor: '#fafafa',\n    color: '#bdbdbd',\n    outline: 'none',\n    transition: 'border .24s ease-in-out'\n};\n\nconst activeStyle = {\n    borderColor: '#2196f3'\n};\n\nconst acceptStyle = {\n    borderColor: '#00e676'\n};\n\nconst rejectStyle = {\n    borderColor: '#ff1744'\n};\n\nconst thumbsContainer = {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginTop: 16\n};\n\nconst thumb = {\n    display: 'inline-flex',\n    borderRadius: 2,\n    border: '1px solid #eaeaea',\n    marginBottom: 8,\n    marginRight: 8,\n    height: 100,\n    padding: 4,\n    boxSizing: 'border-box'\n};\n\nconst thumbInner = {\n    display: 'flex',\n    minWidth: 0,\n    overflow: 'hidden'\n};\n\nconst img = {\n    display: 'block',\n    width: 'auto',\n    height: '100%'\n};\n\n\n\nexport default function StyledDropzone(props) {\n    const [files, setFiles] = useState([])\n    const onDrop = useCallback(acceptedFiles => {\n        setFiles(acceptedFiles.map(file => Object.assign(file, {\n            preview: URL.createObjectURL(file)\n        })));\n        props[\"onDropFunction\"](acceptedFiles);\n    })\n    const {\n        getRootProps,\n        getInputProps,\n        isDragActive,\n        isDragAccept,\n        isDragReject\n    } = useDropzone({ accept: 'image/*', onDrop });\n\n    const thumbs = files.map(file => (\n        <div style={thumb} key={file.name}>\n            <div style={thumbInner}>\n                <img\n                    src={file.preview}\n                    style={img}\n                />\n            </div>\n        </div>\n    ));\n\n    useEffect(() => () => {\n        // Make sure to revoke the data uris to avoid memory leaks\n        files.forEach(file => URL.revokeObjectURL(file.preview));\n    }, [files]);\n\n\n    const style = useMemo(() => ({\n        ...baseStyle,\n        ...(isDragActive ? activeStyle : {}),\n        ...(isDragAccept ? acceptStyle : {}),\n        ...(isDragReject ? rejectStyle : {})\n    }), [\n        isDragActive,\n        isDragReject,\n        isDragAccept\n    ]);\n\n    return (\n        <div className=\"container\">\n            <div {...getRootProps({ style })}>\n                <input {...getInputProps()} />\n                <p>Drag 'n' drop some files here, or click to select files</p>\n            </div>\n            <aside style={thumbsContainer}>\n                {thumbs}\n            </aside>\n        </div>\n    );\n}\n\n","import React, { useState } from 'react'\n\nexport const MasksContext = React.createContext({\n    masks: [],\n    setMasks: () => { }\n})\n\nexport const MasksContextProvider = (props) => {\n\n    const setMasks = (masks) => {\n        console.log(masks)\n        setState({ ...state, masks: masks })\n    }\n\n    const initState = {\n        masks: {\n            classes: [],\n            boundingBoxes: []\n        },\n        setMasks: setMasks\n    }\n\n    const [state, setState] = useState(initState)\n\n    return (\n        <MasksContext.Provider value={state}>\n            {props.children}\n        </MasksContext.Provider>\n    )\n}","import React, { useState } from 'react'\n\nexport const DataContext = React.createContext({\n    data: {\n        classes: [],\n        boundingBoxes: []\n    },\n    setdata: () => { }\n})\n\nexport const DataContextProvider = (props) => {\n\n    const setData = (data) => {\n        console.log(data)\n        setState({ ...state, data: data })\n    }\n\n    const initState = {\n        data: {\n            classes: [],\n            boundingBoxes: [],\n            bottomCenter:[0, 0]\n        },\n        setdata: setData\n    }\n\n    const [state, setState] = useState(initState)\n\n    return (\n        <DataContext.Provider value={state}>\n            {props.children}\n        </DataContext.Provider>\n    )\n}","export function urltoFile(url, filename, mimeType) {\n    return (fetch(url)\n        .then(function (res) { return res.arrayBuffer(); })\n        .then(function (buf) { return new File([buf], filename, { type: mimeType }); })\n    );\n}\n\n\nexport function arrayBufferToBase64( buffer ) {\n    var binary = '';\n    var bytes = new Uint8Array( buffer );\n    var len = bytes.byteLength;\n    for (var i = 0; i < len; i++) {\n        binary += String.fromCharCode( bytes[ i ] );\n    }\n    return window.btoa( binary );\n}\n\nexport function dataURLtoFile(dataurl, filename) {\n \n    var arr = dataurl.split(','),\n        mime = arr[0].match(/:(.*?);/)[1],\n        bstr = atob(arr[1]), \n        n = bstr.length, \n        u8arr = new Uint8Array(n);\n        \n    while(n--){\n        u8arr[n] = bstr.charCodeAt(n);\n    }\n    \n    return new File([u8arr], filename, {type:mime});\n}","import React, { useState, useContext } from 'react';\nimport ImageUpload from './ImageUpload';\nimport { LinearProgress } from '@material-ui/core'\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grow from '@material-ui/core/Grow';\nimport { MasksContext } from '../contexts/mlContext';\nimport { DataContext } from '../contexts/classContextMgm';\nimport { arrayBufferToBase64 } from '../utils/img2base64'\nconst divStyles = {\n    paddingLeft: '15px',\n    paddingRight: '15px'\n}\n\nexport default function Upload(props) {\n    const [file, setFile] = useState(\"\")\n    const [loading, setLoading] = useState(false);\n    const [showImg, setShowImg] = useState(false);\n    const [startedLoading, setStartedLoading] = useState(false)\n    const dataContext = useContext(DataContext)\n    const masksContext = useContext(MasksContext);\n    const onDropFunction = (acceptedFiles) => {\n        const formData = new FormData();\n        const reader = new FileReader()\n        reader.readAsDataURL(acceptedFiles[0]);\n        reader.onloadend = () => {\n            localStorage.setItem('object-image', reader.result)\n        }\n        formData.append('file', acceptedFiles[0]);\n        setLoading(true);\n        setStartedLoading(true);\n        fetch('http://3.21.241.59/predict', {\n            method: 'POST',\n            body: formData\n        }).then(response => response.blob())\n            .then(response => {\n                var reader = new FileReader();\n                reader.readAsDataURL(response);\n                reader.onloadend = function () {\n                    var base64data = reader.result;\n                    localStorage.setItem(\"objects-detected\", base64data)\n                    setFile(base64data)\n                }\n                setLoading(false)\n            })\n        fetch('http://3.21.241.59/get_masks', {\n            method: 'POST',\n            body: formData\n        }).then(response => response.json())\n            .then(response => {\n                dataContext.setdata({\n                    classes: response['predicted_classes'],\n                    boundingBoxes: response['bounding_boxes'],\n                    bottomCenter: [0, 0]\n                })\n                masksContext.setMasks(response['masks'])\n            })\n\n    }\n    return (\n        <div style={divStyles}>\n            {loading ? <LinearProgress /> : <div>\n                {startedLoading && (<div>\n                    <FormControlLabel\n                        control={<Switch checked={showImg} onChange={() => setShowImg((prev) => !prev)} />}\n                        label=\"Show Image (Once recived)\"\n                    />\n                    <br></br>\n                    <p>{dataContext.data['classes'].length} objects were found. Click next</p>\n                </div>)}\n                <Grow in={showImg}>\n                    <img src={file} alt=\"\" height={showImg ? \"auto\" : \"0px\"}></img>\n                </Grow>\n            </div>\n            }\n            <p>Upload the image</p>\n            <ImageUpload onDropFunction={onDropFunction} />\n\n        </div>\n    )\n}","import React, { useState } from 'react'\n\nexport const SelectedContext = React.createContext({\n    data: {\n        classes: [],\n        boundingBoxes: []\n    },\n    setdata: () => { }\n})\n\nexport const SelectedContextProvider = (props) => {\n\n    const setData = (data) => {\n        console.log(data)\n        setState({ ...state, data: data })\n    }\n\n    const initState = {\n        data: {\n            mask: [],\n            boundingBox: [],\n            bottomCenter:[0, 0],\n            predClass:\"\"\n        },\n        setdata: setData\n    }\n\n    const [state, setState] = useState(initState)\n\n    return (\n        <SelectedContext.Provider value={state}>\n            {props.children}\n        </SelectedContext.Provider>\n    )\n}","import React, { useState, createRef, useEffect, useContext} from 'react'\nimport { Button } from \"@material-ui/core\"\nimport Tooltip from '@material-ui/core/Tooltip';\nimport {DataContext} from \"../contexts/classContextMgm\";\nimport {MasksContext} from \"../contexts/mlContext\";\nimport {SelectedContext} from '../contexts/selectContextMgmt'\nimport { findMask } from \"../utils/findMask\"\n\nconst Step2Comp = (props) => {\n    const [coord, setCoord] = useState([0, 0])\n    const [canClick, setClick] = useState(true)\n    const [submitted, setSubmitted] = useState(false)\n    let imgString = localStorage.getItem(\"objects-detected\")\n    const dataContext = useContext(DataContext)\n    const masksContext = useContext(MasksContext);\n    const selectedContext = useContext(SelectedContext)\n    const canvasRef = createRef();\n    const imageRef = createRef();\n    function getMousePosition(canvas, event) {\n        if (canClick) {\n            let rect = canvas.getBoundingClientRect();\n            let x = event.clientX - rect.left;\n            let y = event.clientY - rect.top;\n            setClick(false)\n            var context = canvas.getContext('2d');\n            context.beginPath();\n            context.arc(x, y, 5, 0, 2 * Math.PI, false);\n            context.fillStyle = 'red';\n            context.fill();\n            context.lineWidth = 1;\n            context.strokeStyle = 'darkred';\n            context.stroke();\n            return [x, y];\n        }\n        return [-1, -1]\n    }\n    useEffect(() => {\n        canvasRef.current.width = imageRef.current.width;\n        canvasRef.current.height = imageRef.current.height / (imageRef.current.width / 600);\n        const ctx = canvasRef.current.getContext('2d')\n        ctx.drawImage(imageRef.current, 0, 0);\n    }, [])\n\n    return (<div>\n        <p>Select Location and press submit.</p>\n        <canvas width={600} ref={canvasRef} onClick={(e) => {\n            if (canClick) {\n                setCoord(getMousePosition(canvasRef.current, e))\n            }\n        }\n        } style={{ cursor: 'crosshair' }}></canvas>\n        <img ref={imageRef} width=\"600px\" src={imgString} alt=\"\" style={{ cursor: 'crosshair', display: 'none' }}></img>\n        <br></br>\n        <Tooltip title=\"...or if you need to select a different object\">\n            <Button variant=\"outlined\" color=\"secondary\" style={{marginRight:'10px'}} onClick={() => {\n                setClick(true);\n                let canvas = canvasRef.current\n                let context = canvasRef.current.getContext('2d');\n                imgString = localStorage.getItem(\"objects-detected\")\n                context.clearRect(0, 0, canvas.width, canvas.height);\n                context.drawImage(imageRef.current, 0, 0);\n            }}>Reload (if image doesn't show)</Button>\n        </Tooltip>\n        <Button variant=\"contained\" color=\"primary\" onClick={() => {\n            localStorage.setItem('coordinates', JSON.stringify(coord))\n            let maskIdx = findMask(coord, masksContext.masks);\n            selectedContext.setdata({\n                predClass:dataContext.data.classes[maskIdx],\n                boundingBox: dataContext.data.boundingBoxes[maskIdx],\n                bottomCenter:coord,\n                mask: masksContext.masks[maskIdx]\n            })\n            setSubmitted(true)\n        }} disabled={submitted || canClick}>{submitted ? 'Submitted (click next)':'Submit Object'}</Button>\n    </div>)\n};\nexport default Step2Comp;","export function findMask(location, masks) {\n    for (let i = 0; i < masks.length; i++) {\n        if (masks[i][location[1]][location[0]] === 1){\n            return i\n        }\n    }\n    return -1\n}","import React, {useState, createRef} from 'react';\nimport ImageUpload from './ImageUpload';\nimport LinearProgress from \"@material-ui/core/LinearProgress\"\nconst divStyles = {\n    paddingLeft: '15px',\n    paddingRight: '15px'\n}\n\nexport default function Upload(props) {\n    const [loading, setLoading] = useState(false)\n    const canvasRef = createRef();\n    const onDropFunction = (acceptedFiles) => {\n        setLoading(true);\n        const reader = new FileReader();\n        if (acceptedFiles.length > 0) {\n            reader.readAsDataURL(acceptedFiles[0])\n        }\n        reader.onloadend = () => {\n            const base64 = reader.result\n            localStorage.setItem(\"background\", base64)\n            setLoading(false);\n        }\n    }\n    return (\n        <div style={divStyles}>\n            {loading ? <LinearProgress /> : <div></div>}\n            <p>Upload your background and the click next</p>\n            <ImageUpload onDropFunction={onDropFunction} hello={\"world\"} />\n            <canvas ref={canvasRef} style={{display:\"none\"}}></canvas>\n        </div>\n    )\n}","import React, { useState, useContext, createRef, useEffect } from 'react';\nimport { Button } from \"@material-ui/core\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { LinearProgress } from '@material-ui/core'\nimport { dataURLtoFile } from '../utils/img2base64'\nimport { SelectedContext } from '../contexts/selectContextMgmt'\nexport default function Step4Comp(props) {\n    const [coord, setCoord] = useState([0, 0])\n    const [canClick, setClick] = useState(true)\n    const [submitted, setSubmitted] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const imgString = localStorage.getItem(\"background\")\n    const selectedContext = useContext(SelectedContext)\n    const canvasRef = createRef();\n    const imageRef = createRef();\n    function getMousePosition(canvas, event) {\n        if (canClick) {\n            let rect = canvas.getBoundingClientRect();\n            let x = event.clientX - rect.left;\n            let y = event.clientY - rect.top;\n            setClick(false)\n            var context = canvas.getContext('2d');\n            context.beginPath();\n            context.arc(x, y, 5, 0, 2 * Math.PI, false);\n            context.fillStyle = 'red';\n            context.fill();\n            context.lineWidth = 1;\n            context.strokeStyle = 'darkred';\n            context.stroke();\n            return [x, y];\n        }\n        return [-1, -1]\n    }\n    useEffect(() => {\n        imageRef.current.onload = () => {\n            canvasRef.current.width = 600;\n            const widthOrig = imageRef.current.width;\n            canvasRef.current.height = imageRef.current.height / (widthOrig / 600);\n            imageRef.current.width = 600;\n            const ctx = canvasRef.current.getContext('2d')\n            ctx.drawImage(imageRef.current, 0, 0, 600, imageRef.current.height / (widthOrig / 600));\n        }\n    }, [])\n    const onSubmit = () => {\n        const formData = new FormData()\n        formData.append('background', dataURLtoFile(localStorage.getItem('background')))\n        formData.append('objectImage', dataURLtoFile(localStorage.getItem('object-image')))\n        formData.append('bottomCenter', JSON.stringify(coord))\n        formData.append('mask', JSON.stringify(selectedContext.data.mask))\n        fetch('http://3.21.241.59/blend', {\n            method: 'POST',\n            body: formData\n        }).then(res => res.blob()).then(res => {\n            console.log(\"Helo\")\n            setLoading(false)\n            var reader = new FileReader();\n            reader.readAsDataURL(res);\n            reader.onloadend = function () {\n                var base64data = reader.result;\n                localStorage.setItem(\"finalBlend\", base64data)\n            }\n        })\n    }\n    return (\n        <div>\n            {loading ? <LinearProgress /> : <div> </div>}\n            <p>Select Location on the image and press submit.</p>\n            <canvas ref={canvasRef} onClick={(e) => {\n                if (canClick) {\n                    setCoord(getMousePosition(canvasRef.current, e))\n                }\n            }\n            } style={{ cursor: 'crosshair' }}></canvas>\n            <img ref={imageRef} src={imgString} alt=\"\" style={{ cursor: 'crosshair', display: 'none' }}></img>\n            <br></br>\n            <Tooltip title=\"...or if you need to select a different location\">\n                <Button disabled={submitted} variant=\"outlined\" color=\"secondary\" style={{ marginRight: '10px' }} onClick={() => {\n                    setClick(true);\n                    let canvas = canvasRef.current\n                    let context = canvasRef.current.getContext('2d');\n                    context.clearRect(0, 0, canvas.width, canvas.height);\n                    context.drawImage(imageRef.current, 0, 0, canvas.width, canvas.height);\n                }}>Reload (if image doesn't show)</Button>\n            </Tooltip>\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {\n                localStorage.setItem('coordinates-background', JSON.stringify(coord))\n                setSubmitted(true)\n                setLoading(true)\n                onSubmit()\n\n            }} disabled={submitted || canClick}>{submitted ? 'Submitted (click next)' : 'Submit Object'}</Button>\n        </div>)\n};\n","import React from 'react';\n\nexport default function Step5Comp(props) {\n    const imString = localStorage.getItem(\"finalBlend\")\n    console.log(imString);\n    return (\n        <div>\n            <p>To download the image, right-click and press \"Save Image as\" or \"Download\" or whatever your browser provides.</p>\n            <img width=\"600px\" src={imString}></img>\n        </div>\n    )\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport ImageUpload from './ImageUpload';\nimport Step1Comp from './UploadImageStep1';\nimport Step2Comp from './Step2Comp';\nimport Step3Comp from './Step3Comp'\nimport Step4Comp from './Step4Comp'\nimport Step5Comp from './Step5Comp'\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n}));\n\n\nconst divStyles = {\n    paddingLeft: '15px',\n    paddingRight:'15px'\n}\n\nfunction getSteps() {\n    return ['Upload Image', 'Select Object', 'Upload Background Image', 'Select location', 'Finished!'];\n}\n\n\nfunction getStepContent(step) {\n    switch (step) {\n        case 0:\n            return (\n                <div>\n                    <Step1Comp/>\n                </div>\n            );\n        case 1:\n            return (<div style={divStyles}>\n                <Step2Comp />\n            </div>);\n        case 2:\n            return  (\n                <div style={divStyles}>\n                    <Step3Comp />\n                </div>\n            );\n        case 3:\n            return  (\n                <div style={divStyles}>\n                    <Step4Comp />\n                </div>\n            );\n        case 4:\n            return  (\n                <div style={divStyles}>\n                    <Step5Comp />\n                </div>\n            );\n        default:\n            return 'Unknown step';\n    }\n}\n\nexport default function HorizontalLinearStepper() {\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const [stepDisabled, setStepDisabled] = React.useState(false)\n    const steps = getSteps();\n\n    const isStepOptional = (step) => {\n        return step === 9;\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const handleNext = () => {\n        let newSkipped = skipped;\n        if (isStepSkipped(activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(activeStep);\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped(newSkipped);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleSkip = () => {\n        if (!isStepOptional(activeStep)) {\n            // You probably want to guard against something like this,\n            // it should never occur unless someone's actively trying to break something.\n            throw new Error(\"You can't skip a step that isn't optional.\");\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped((prevSkipped) => {\n            const newSkipped = new Set(prevSkipped.values());\n            newSkipped.add(activeStep);\n            return newSkipped;\n        });\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n    return (\n        <div className={classes.root}>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (isStepOptional(index)) {\n                        labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label} {...stepProps}>\n                            <StepLabel {...labelProps}>{label}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n            <div>\n                {activeStep === steps.length ? (\n                    <div style={divStyles}>\n                        <Typography className={classes.instructions}>\n                            All steps completed - you&apos;re finished\n            </Typography>\n                        <Button onClick={handleReset} className={classes.button}>\n                            Blend New image\n            </Button>\n                    </div>\n                ) : (\n                        <div>\n                            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n                            <div style={divStyles}>\n                                <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                                    Back\n              </Button>\n                                {isStepOptional(activeStep) && (\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={handleSkip}\n                                        className={classes.button}\n                                    >\n                                        Skip\n                                    </Button>\n                                )}\n\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                    disabled={stepDisabled}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n                            </div>\n                        </div>\n                    )}\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport './App.css';\nimport Header from './components/Header'\nimport Blending from './components/Main';\nimport { MasksContextProvider } from './contexts/mlContext';\nimport { DataContextProvider } from './contexts/classContextMgm'\nimport { SelectedContextProvider } from './contexts/selectContextMgmt';\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <DataContextProvider>\n        <MasksContextProvider>\n          <SelectedContextProvider>\n            <Blending />\n          </SelectedContextProvider>\n        </MasksContextProvider>\n      </DataContextProvider>\n      <br></br>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}